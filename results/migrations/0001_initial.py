# Generated by Django 3.2 on 2023-11-23 16:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('curriculum', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('description', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MarkedSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(null=True)),
                ('cand_score', models.IntegerField(blank=True)),
                ('pass_mark', models.IntegerField(blank=True)),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('exam_paper', models.CharField(blank=True, help_text='Paste link to marked sheet', max_length=300)),
            ],
            options={
                'verbose_name': 'Marked Sheet',
                'verbose_name_plural': 'Marked Sheet',
            },
        ),
        migrations.CreateModel(
            name='ResultSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('first_term', 'first_term'), ('second_term', 'second_term'), ('third_term', 'third_term'), ('others', 'others')], default='others', max_length=15)),
                ('exam_date', models.DateField(null=True)),
                ('score_1ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_1exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_2ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_2exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_3ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_3exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_4ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_4exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_5ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_5exam', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_6ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_6exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_7ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_7exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_8ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_8exam', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_9ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_9exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_10ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_10exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_11ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_11exam', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_12ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_12exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_13ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_13exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_14ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_14exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_15ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_15exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_16ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_16exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_17ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_17exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_18ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_18exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_19ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_19exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('score_20ca', models.IntegerField(blank=True, default=0, help_text='Enter C.A score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('score_20exam', models.IntegerField(blank=True, default=0, help_text='Enter Exam score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('class_teacher_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('principal_comment', models.CharField(blank=True, default='auto-generated', max_length=150, null=True)),
                ('no_days_school_open', models.IntegerField(blank=True, default=0)),
                ('no_days_present', models.IntegerField(blank=True, default=0)),
                ('next_term_resume', models.DateField(blank=True, null=True)),
                ('publish', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Result Sheet',
                'verbose_name_plural': 'Result Sheet',
            },
        ),
        migrations.CreateModel(
            name='UploadResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(blank=True, help_text='Paste Certificate Link', max_length=300)),
                ('remark', models.CharField(blank=True, max_length=150)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='results.examination')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum.session')),
                ('standard', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='curriculum.standard')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificate',
            },
        ),
    ]
